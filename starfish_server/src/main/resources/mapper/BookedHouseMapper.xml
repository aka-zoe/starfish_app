<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zoe.starfish_server.mapper.BookedHouseMapper">
    <resultMap id="BaseResultMap" type="com.zoe.starfish_server.domain.BookedHouse">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="houseResId" jdbcType="BIGINT" property="houseresid"/>
        <result column="bookedTime" jdbcType="BIGINT" property="bookedtime"/>
        <result column="userId" jdbcType="BIGINT" property="userid"/>
        <result column="bookedUserId" jdbcType="BIGINT" property="bookeduserid"/>
        <result column="userPhone" jdbcType="VARCHAR" property="userphone"/>
        <result column="userName" jdbcType="VARCHAR" property="username"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, houseResId, bookedTime, userId, bookedUserId, userPhone, userName, `status`
    </sql>
    <select id="selectByExample" parameterType="com.zoe.starfish_server.domain.BookedHouseExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from booked_house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="orderByClause == null">
            order by bookedTime desc
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from booked_house
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from booked_house
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.zoe.starfish_server.domain.BookedHouseExample">
        delete from booked_house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zoe.starfish_server.domain.BookedHouse">
        insert into booked_house (id, houseResId, bookedTime,
        userId, bookedUserId, userPhone,
        userName, `status`)
        values (#{id,jdbcType=BIGINT}, #{houseresid,jdbcType=BIGINT}, #{bookedtime,jdbcType=BIGINT},
        #{userid,jdbcType=BIGINT}, #{bookeduserid,jdbcType=BIGINT}, #{userphone,jdbcType=VARCHAR},
        #{username,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.zoe.starfish_server.domain.BookedHouse">
        insert into booked_house
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="houseresid != null">
                houseResId,
            </if>
            <if test="bookedtime != null">
                bookedTime,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="bookeduserid != null">
                bookedUserId,
            </if>
            <if test="userphone != null">
                userPhone,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="houseresid != null">
                #{houseresid,jdbcType=BIGINT},
            </if>
            <if test="bookedtime != null">
                #{bookedtime,jdbcType=BIGINT},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=BIGINT},
            </if>
            <if test="bookeduserid != null">
                #{bookeduserid,jdbcType=BIGINT},
            </if>
            <if test="userphone != null">
                #{userphone,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zoe.starfish_server.domain.BookedHouseExample"
            resultType="java.lang.Long">
        select count(*) from booked_house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update booked_house
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.houseresid != null">
                houseResId = #{record.houseresid,jdbcType=BIGINT},
            </if>
            <if test="record.bookedtime != null">
                bookedTime = #{record.bookedtime,jdbcType=BIGINT},
            </if>
            <if test="record.userid != null">
                userId = #{record.userid,jdbcType=BIGINT},
            </if>
            <if test="record.bookeduserid != null">
                bookedUserId = #{record.bookeduserid,jdbcType=BIGINT},
            </if>
            <if test="record.userphone != null">
                userPhone = #{record.userphone,jdbcType=VARCHAR},
            </if>
            <if test="record.username != null">
                userName = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update booked_house
        set id = #{record.id,jdbcType=BIGINT},
        houseResId = #{record.houseresid,jdbcType=BIGINT},
        bookedTime = #{record.bookedtime,jdbcType=BIGINT},
        userId = #{record.userid,jdbcType=BIGINT},
        bookedUserId = #{record.bookeduserid,jdbcType=BIGINT},
        userPhone = #{record.userphone,jdbcType=VARCHAR},
        userName = #{record.username,jdbcType=VARCHAR},
        `status` = #{record.status,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zoe.starfish_server.domain.BookedHouse">
        update booked_house
        <set>
            <if test="houseresid != null">
                houseResId = #{houseresid,jdbcType=BIGINT},
            </if>
            <if test="bookedtime != null">
                bookedTime = #{bookedtime,jdbcType=BIGINT},
            </if>
            <if test="userid != null">
                userId = #{userid,jdbcType=BIGINT},
            </if>
            <if test="bookeduserid != null">
                bookedUserId = #{bookeduserid,jdbcType=BIGINT},
            </if>
            <if test="userphone != null">
                userPhone = #{userphone,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zoe.starfish_server.domain.BookedHouse">
        update booked_house
        set houseResId = #{houseresid,jdbcType=BIGINT},
        bookedTime = #{bookedtime,jdbcType=BIGINT},
        userId = #{userid,jdbcType=BIGINT},
        bookedUserId = #{bookeduserid,jdbcType=BIGINT},
        userPhone = #{userphone,jdbcType=VARCHAR},
        userName = #{username,jdbcType=VARCHAR},
        `status` = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
